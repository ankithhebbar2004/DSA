class Solution {
    public int[] searchRange(int[] nums, int target) {
       int first = firstlim(nums,target);
       int last = lastlim(nums,target);
       return new int[] {first,last}; 
    }
    private int firstlim(int[] nums,int target)
    {
        int l=0;
        int r=nums.length-1;
        int first = -1;
        while(l<=r)
        {
            int mid = l+(r-l)/2;
            if(nums[mid]==target){
                first = mid;
                r = mid - 1;
            }else if(nums[mid]<target){
                l = mid + 1;
            }else {
                r = mid -1;
            }
        }
        return first;
    }
    private int lastlim(int[] nums,int target)
    {
        int l=0;
        int r=nums.length-1;
        int last = -1;
        while(l<=r)
        {
            int mid = l+(r-l)/2;
            if(nums[mid]==target){
                last = mid;
                l = mid + 1;
            }else if(nums[mid]<target){
                l = mid + 1;
            }else {
                r = mid -1;
            }
        }
        return last;
    }
}
